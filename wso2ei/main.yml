---
  - name: Install WSO2 EI
    hosts: wso2-esb-nodes

    vars:
        db_wso2_user_db: "WSO2_USER_DB"
        java_base: "/usr/lib/jvm/jdk1.8.0_131/"
        jdbc_jar: "/home/fran/Descargas/mysql-connector-java-5.1.44-bin.jar"
        wso2ei_home: "/usr/local/wso2/wso2ei"
        wso2ei_product: "wso2ei-6.2.0"
        wso2ei_product_timestamp: "{{ wso2ei_product }}.1526903394194"
        wso2ei_root: "/usr/local/wso2/"
        wso2ei_source: "/home/fran/.wum-wso2/products/wso2ei/6.2.0/"
        carbon:
            hostName: wso2b
            mgHostName: wso2b
            offset: 0
        userMgt:
            realm:
                addAdmin:
                    userName:
                        password: admin
        datasource:
            REGISTRY_LOCAL:
                name: REGISTRY_LOCAL1
                jdbc: jdbc/WSO2CarbonDB
                url: jdbc:mysql://localhost:3306/REGISTRY_LOCAL1?autoReconnect=true
                username: wso2
                password: wso2carbon
                driver: com.mysql.jdbc.Driver
            REGISTRY:
                name: REGISTRY_DB
                jdbc: jdbc/WSO2RegistryDB
                url: jdbc:mysql://localhost:3306/REGISTRY_DB?autoReconnect=true
                username: wso2
                password: wso2carbon
                driver: com.mysql.jdbc.Driver
            USER:
                name : WSO2_USER_DB
                jdbc: jdbc/WSO2UMDB
                url: jdbc:mysql://localhost:3306/WSO2_USER_DB?autoReconnect=true
                username: wso2
                password: wso2carbon
                driver: com.mysql.jdbc.Driver


    tasks:
      - name: Check if WSO2_PRODUCT exists
        stat: path="{{ wso2ei_root }}/{{ wso2ei_product }}/bin/integrator.sh"
        register: wso2ei_product_exists

      - name: Check if WSO2_HOME exists
        stat: path="{{ wso2ei_home }}/bin/integrator.sh"
        register: wso2ei_exists

      - name: Copy zip to destination
        copy:
            src: "{{ wso2ei_source }}/{{ wso2ei_product_timestamp }}.zip"
            dest: "{{ wso2ei_root }}"
        when: not wso2ei_product_exists.stat.exists

      - name: Unzip package
        unarchive:
            src:  "{{ wso2ei_root }}/{{ wso2ei_product_timestamp }}.zip"
            dest: "{{ wso2ei_root }}"
        when: not wso2ei_product_exists.stat.exists

      - name: Create WSO2_HOME
        shell: "ln -s {{ wso2ei_root }}/{{ wso2ei_product }} {{ wso2ei_home }}"
        when: not wso2ei_exists.stat.exists

      - name: "Copy JDBC driver {{ jdbc_jar }}"
        copy:
            src: "{{ jdbc_jar }}"
            dest: "{{ wso2ei_home }}/lib/"

      - name: Configure carbon.xml
        template:
            src: templates/conf/carbon.xml.j2
            dest: "{{ wso2ei_home }}/conf/carbon.xml"

      - name: Configure user-mgt.xml
        template:
            src: templates/conf/user-mgt.xml.j2
            dest: "{{ wso2ei_home }}/conf/user-mgt.xml"

      - name: Configure master-datasources.xml
        template:
            src: templates/conf/datasources/master-datasources.xml.j2
            dest: "{{ wso2ei_home }}/conf/datasources/master-datasources.xml"

# Configure {{wso2ei_home}}/conf/axis2/axis2.xml
# Configure Hazelcast properties
# Deploying artifacts with rsync

